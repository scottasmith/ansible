---
- name: Test if kubernetes is up and running
  ansible.builtin.shell: kubectl cluster-info
  changed_when: false
  register: k8_cluster_info_output
  failed_when: k8_cluster_info_output.rc not in [ 0, 1 ]

- name: Initialize kubernetes master
  ansible.builtin.shell: >
    kubeadm init \
      --control-plane-endpoint {{ kubernetes_vvrp_virtual_ip }} \
      --cri-socket /var/run/containerd/containerd.sock \
      --token {{ kubernetes_token }} \
      --apiserver-advertise-address {{ ansible_host }}  \
      --pod-network-cidr {{ kubernetes_pod_subnet }} \
      --skip-token-print \
      --skip-certificate-key-print \
      --upload-certs
  when: k8_cluster_info_output.rc != 0 and kubernetes_primary_master == ansible_host
  changed_when: false

- name: Initialize kubernetes master
  ansible.builtin.shell: >
    kubeadm join \
      --apiserver-advertise-address {{ ansible_host }}  \
      --cri-socket /var/run/containerd/containerd.sock \
      --token {{ kubernetes_token }} \
      --control-plane
  when: k8_cluster_info_output.rc != 0 and kubernetes_primary_master != ansible_host
  changed_when: False

- name: Setup ansible .kube directory
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    mode: '0755'

- name: Copy admin.conf to the user's kube directory
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: yes

- name: Secure k8 user's admin configuration
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: root
    mode: '0700'

- name: Setup .kube directory
  ansible.builtin.file:
    path: "/root/.kube"
    state: directory
    mode: '0755'
