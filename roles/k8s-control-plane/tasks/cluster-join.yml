---
- name: Generate cluster control plane join certificate
  ansible.builtin.shell: kubeadm init phase upload-certs --upload-certs
  register: kubeadm_join_certificate_cmd_raw
  delegate_to: "{{ groups['k8s_masters'][0] }}"
  run_once: true

- name: set k8 join command certificate as fact
  ansible.builtin.set_fact:
    kubeadm_join_certificate: "{{ kubeadm_join_certificate_cmd_raw.stdout_lines[2] }}"
  when: kubeadm_join_certificate is not defined

- name: Generate join token
  ansible.builtin.shell: kubeadm token create --print-join-command --certificate-key {{ kubeadm_join_certificate }}
  register: kubeadm_join_cmd_raw
  delegate_to: "{{ groups['k8s_masters'][0] }}"

- name: set k8 join command as fact
  ansible.builtin.set_fact:
    kubeadm_join_cmd: "{{ kubeadm_join_cmd_raw.stdout }} --control-plane"
  when: kubeadm_join_cmd is not defined

- name: Show join command
  ansible.builtin.debug:
    msg: "{{ kubeadm_join_cmd }}"

- name: Execute join command
  ansible.builtin.shell: "{{ kubeadm_join_cmd }}"

- name: Setup ansible .kube directory
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    mode: '0755'

- name: Copy admin.conf to the user's kube directory
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: yes

- name: Secure k8 user's admin configuration
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: root
    mode: '0700'

- name: Setup .kube directory
  ansible.builtin.file:
    path: "/root/.kube"
    state: directory
    mode: '0755'

- name: Copy admin.conf to roots kube directory
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/root/.kube/config"
    remote_src: yes

- name: Secure k8 roots configuration
  ansible.builtin.file:
    path: "/root/.kube/config"
    owner: "{{ ansible_user }}"
    group: root
    mode: '0700'
